<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<!-- Method Documentation URL: https://developers.vendhq.com/documentation/api/0.x/register-sales.html#get-api-register-sales -->
<template name="listRegisterSales" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="since"
               description="If included, returns only register sales modified since the given time. The provided date and time should be in UTC and formatted according to ISO 8601."/>
    <parameter name="outletId"
               description="If included, returns only register sales made for the given outlet, identified by ID."/>
    <parameter name="tag"
               description="If included, returns only register sales containing a product with a given tag. Note that the complete sale record is returned, including the details of any other products in the same; these may not have the specified tag."/>
    <parameter name="statuses"
               description="If included, returns only register sales in the given state. The status[] parameter may be used more than once; returned sales will be in any of the specified states."/>
    <sequence>
        <property name="uri.var.since" expression="$func:since"/>
        <property name="uri.var.outletId" expression="$func:outletId"/>
        <property name="uri.var.tag" expression="$func:tag"/>
        <property name="uri.var.statuses" expression="$func:statuses"/>
        <script language="js">
            <![CDATA[
            var outletId = mc.getProperty('uri.var.outletId');
            var statuses = mc.getProperty('uri.var.statuses');
            var tag = mc.getProperty('uri.var.tag');
            var since = mc.getProperty('uri.var.since');
            var urlQuery = '';
            if (since != null && since != "") {
               urlQuery += 'since=' + since + '&';
            }
            if (outletId != null && outletId != "") {
               urlQuery += 'outlet_id=' + outletId + '&';
            }
            if (tag != null && tag != "") {
               urlQuery += 'tag=' + tag + '&';
            }
            if (statuses != null && statuses != "") {
               var statusArray = eval("(" + statuses + ")");
               for(var i=0 ; i<statusArray.length ;i++) {
                  urlQuery += 'status[]=' + statusArray[i] + '&';
               }
            }
            // Add a leading '?' and remove the trailing '&'
            if (urlQuery != "") {
               urlQuery = '?' + urlQuery.toString().substring(0, urlQuery.toString().lastIndexOf("&"));
               
               mc.setProperty('uri.var.urlQuery', urlQuery);
            }
         ]]>
        </script>
        <call>
            <endpoint>
                <http method="get" uri-template="{+uri.var.apiUrl}/register_sales{+uri.var.urlQuery}"/>
            </endpoint>
        </call>
        <property name="uri.var.statusCode" expression="$axis2:HTTP_SC"/>
        <!-- If the call fails with 401 Unauthorized, then get a new access token by calling getAccessToken method. -->
        <filter xpath="get-property('uri.var.statusCode') = 401 and get-property('uri.var.refreshTokenNegotiated') = 'false'">
            <then>
                <vend.getAccessTokenFromRefreshToken/>
                <header name="Authorization" expression="fn:concat('Bearer ', get-property('uri.var.accessToken'))"
                        scope="transport"/>
                <vend.listRegisterSales/>
            </then>
        </filter>
        <!-- Remove custom Headers from the API Response -->
        <header name="Vary" action="remove" scope="transport"/>
        <header name="Expires" action="remove" scope="transport"/>
        <header name="Pragma" action="remove" scope="transport"/>
        <header name="Cache-Control" action="remove" scope="transport"/>
        <header name="X-Vend-Request-Id" action="remove" scope="transport"/>
        <header name="Strict-Transport-Security" action="remove" scope="transport"/>
        <header name="Set-Cookie" action="remove" scope="transport"/>
        <header name="X-Hue" action="remove" scope="transport"/>
    </sequence>
</template>
