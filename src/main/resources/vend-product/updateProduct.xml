<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<!-- Method Documentation URL: https://developers.vendhq.com/documentation/api/0.x/products.html#update -->
<template name="updateProduct" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="sourceId" description="ID of the source using which the product would to be created."/>
    <parameter name="sourceVariantId"
               description="ID of the variant of the source using which the product would be created."/>
    <parameter name="handle" description="Unique identifier of the product."/>
    <parameter name="type" description="Type of the product."/>
    <parameter name="tags" description="Tags to be added to the product. Expects comma seperated list of values."/>
    <parameter name="name" description="Name of the product."/>
    <parameter name="description" description="Description of the product."/>
    <parameter name="sku" description="Stock Keeping Unit of the product."/>
    <parameter name="variantOptionOneName" description="Name of first variant of the product."/>
    <parameter name="variantOptionOneValue" description="Value of first variant of the product."/>
    <parameter name="variantOptionTwoName" description="Name of second variant of the product."/>
    <parameter name="variantOptionTwoValue" description="Value of second variant of the product."/>
    <parameter name="variantOptionThreeName" description="Name of third variant of the product."/>
    <parameter name="variantOptionThreeValue" description="Value of third variant of the product."/>
    <parameter name="supplyPrice" description="Supply price of the product."/>
    <parameter name="retailPrice" description="Retail price of the product."/>
    <parameter name="tax" description="Name of the tax applicable when selling the product."/>
    <parameter name="brandName" description="Brand name for the product."/>
    <parameter name="supplierName" description="Name of the supplier for the product."/>
    <parameter name="supplierCode" description="Code of the supplier for the product."/>
    <parameter name="inventory" description="Inventory details of the product."/>
    <parameter name="productId" description="ID of the product to update."/>
    <sequence>
        <property name="uri.var.sourceId" expression="$func:sourceId"/>
        <property name="uri.var.sourceVariantId" expression="$func:sourceVariantId"/>
        <property name="uri.var.handle" expression="$func:handle"/>
        <property name="uri.var.type" expression="$func:type"/>
        <property name="uri.var.tags" expression="$func:tags"/>
        <property name="uri.var.name" expression="$func:name"/>
        <property name="uri.var.description" expression="$func:description"/>
        <property name="uri.var.sku" expression="$func:sku"/>
        <property name="uri.var.variantOptionOneName" expression="$func:variantOptionOneName"/>
        <property name="uri.var.variantOptionOneValue" expression="$func:variantOptionOneValue"/>
        <property name="uri.var.variantOptionTwoName" expression="$func:variantOptionTwoName"/>
        <property name="uri.var.variantOptionTwoValue" expression="$func:variantOptionTwoValue"/>
        <property name="uri.var.variantOptionThreeName" expression="$func:variantOptionThreeName"/>
        <property name="uri.var.variantOptionThreeValue" expression="$func:variantOptionThreeValue"/>
        <property name="uri.var.supplyPrice" expression="$func:supplyPrice"/>
        <property name="uri.var.retailPrice" expression="$func:retailPrice"/>
        <property name="uri.var.tax" expression="$func:tax"/>
        <property name="uri.var.brandName" expression="$func:brandName"/>
        <property name="uri.var.supplierName" expression="$func:supplierName"/>
        <property name="uri.var.supplierCode" expression="$func:supplierCode"/>
        <property name="uri.var.inventory" expression="$func:inventory"/>
        <property name="uri.var.productId" expression="$func:productId"/>
        <payloadFactory media-type="json">
            <format>
                {"id": "$1"}
            </format>
            <args>
                <arg expression="get-property('uri.var.productId')"/>
            </args>
        </payloadFactory>
        <script language="js">
            <![CDATA[
            var sourceId = mc.getProperty('uri.var.sourceId');
            var supplierName = mc.getProperty('uri.var.supplierName');
            var variantOptionThreeValue = mc.getProperty('uri.var.variantOptionThreeValue');
            var brandName = mc.getProperty('uri.var.brandName');
            var supplyPrice = mc.getProperty('uri.var.supplyPrice');
            var description = mc.getProperty('uri.var.description');
            var handle = mc.getProperty('uri.var.handle');
            var tax = mc.getProperty('uri.var.tax');
            var supplierCode = mc.getProperty('uri.var.supplierCode');
            var type = mc.getProperty('uri.var.type');
            var inventory = mc.getProperty('uri.var.inventory');
            var tags = mc.getProperty('uri.var.tags');
            var variantOptionThreeName = mc.getProperty('uri.var.variantOptionThreeName');
            var variantOptionTwoName = mc.getProperty('uri.var.variantOptionTwoName');
            var variantOptionTwoValue = mc.getProperty('uri.var.variantOptionTwoValue');
            var sourceVariantId = mc.getProperty('uri.var.sourceVariantId');
            var variantOptionOneName = mc.getProperty('uri.var.variantOptionOneName');
            var name = mc.getProperty('uri.var.name');
            var variantOptionOneValue = mc.getProperty('uri.var.variantOptionOneValue');
            var sku = mc.getProperty('uri.var.sku');
            var retailPrice = mc.getProperty('uri.var.retailPrice');
            var jsonPayload = mc.getPayloadJSON();
            if (sourceId != null && sourceId != ""){
               jsonPayload.source_id = sourceId;
            }
            if (sourceVariantId != null && sourceVariantId != ""){
               jsonPayload.source_variant_id = sourceVariantId;
            }
            if (handle != null && handle != ""){
               jsonPayload.handle = handle;
            }
            if (type != null && type != ""){
               jsonPayload.type = type;
            }
            if (tags != null && tags != ""){
               jsonPayload.tags = tags;
            }
            if (name != null && name != ""){
               jsonPayload.name = name;
            }
            if (description != null && description != ""){
               jsonPayload.description = description;
            }
            if (sku != null && sku != ""){
               jsonPayload.sku = sku;
            }
            if (variantOptionOneName != null && variantOptionOneName != ""){
               jsonPayload.variant_option_one_name = variantOptionOneName;
            }
            if (variantOptionOneValue != null && variantOptionOneValue != ""){
               jsonPayload.variant_option_one_value = variantOptionOneValue;
            }
            if (variantOptionTwoName != null && variantOptionTwoName != ""){
               jsonPayload.variant_option_two_name = variantOptionTwoName;
            }
            if (variantOptionTwoValue != null && variantOptionTwoValue != ""){
               jsonPayload.variant_option_two_value = variantOptionTwoValue;
            }
            if (variantOptionThreeName != null && variantOptionThreeName != ""){
               jsonPayload.variant_option_three_name = variantOptionThreeName;
            }
            if (variantOptionThreeValue != null && variantOptionThreeValue != ""){
               jsonPayload.variant_option_three_value = variantOptionThreeValue;
            }
            if (supplyPrice != null && supplyPrice != ""){
               jsonPayload.supply_price = supplyPrice;
            }
            if (retailPrice != null && retailPrice != ""){
               jsonPayload.retail_price = retailPrice;
            }
            if (tax != null && tax != ""){
               jsonPayload.tax = tax;
            }
            if (brandName != null && brandName != ""){
               jsonPayload.brand_name = brandName;
            }
            if (supplierName != null && supplierName != ""){
               jsonPayload.supplier_name = supplierName;
            }
            if (supplierCode != null && supplierCode != ""){
               jsonPayload.supplier_code = supplierCode;
            }
            if (inventory != null && inventory != ""){
               jsonPayload.inventory = eval("(" + inventory + ")");
            }
            mc.setPayloadJSON(jsonPayload);
         ]]>
        </script>
        <call>
            <endpoint>
                <http method="post" uri-template="{+uri.var.apiUrl}/products"/>
            </endpoint>
        </call>
        <property name="uri.var.statusCode" expression="$axis2:HTTP_SC"/>
        <!-- If the call fails with 401 Unauthorized, then get a new access token by calling getAccessToken method. -->
        <filter xpath="get-property('uri.var.statusCode') = 401 and get-property('uri.var.refreshTokenNegotiated') = 'false'">
            <then>
                <vend.getAccessTokenFromRefreshToken/>
                <header name="Authorization" expression="fn:concat('Bearer ', get-property('uri.var.accessToken'))"
                        scope="transport"/>
                <vend.updateProduct/>
            </then>
        </filter>
        <!-- Remove custom Headers from the API Response -->
        <header name="Vary" action="remove" scope="transport"/>
        <header name="Expires" action="remove" scope="transport"/>
        <header name="Pragma" action="remove" scope="transport"/>
        <header name="Cache-Control" action="remove" scope="transport"/>
        <header name="X-Vend-Request-Id" action="remove" scope="transport"/>
        <header name="Strict-Transport-Security" action="remove" scope="transport"/>
        <header name="Set-Cookie" action="remove" scope="transport"/>
        <header name="X-Hue" action="remove" scope="transport"/>
    </sequence>
</template>
