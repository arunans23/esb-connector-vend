<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<!-- Method Documentation URL: https://developers.vendhq.com/documentation/api/0.x/customers.html#update -->
<template name="updateCustomer" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="customerCode" description="Unique identifier for the customer."/>
    <parameter name="companyName" description="Name of the company the customer belongs to."/>
    <parameter name="firstName" description="First name of the customer."/>
    <parameter name="lastName" description="Last name of the customer."/>
    <parameter name="phone" description="Fixed number of the customer."/>
    <parameter name="mobile" description="Mobile number of the customer."/>
    <parameter name="fax" description="Fax of the customer."/>
    <parameter name="email" description="Email of the customer."/>
    <parameter name="website" description="Website of the customer."/>
    <parameter name="physicalAddress1" description="Address line 1 of the customer."/>
    <parameter name="physicalAddress2" description="Address line 2 of the customer."/>
    <parameter name="physicalSuburb" description="Suburb of the customer."/>
    <parameter name="physicalCity" description="City of the customer."/>
    <parameter name="physicalPostcode" description="Postcode of the customer."/>
    <parameter name="physicalState" description="State of the customer."/>
    <parameter name="physicalCountryId" description="ID of the counrty of the customer."/>
    <parameter name="postalAddress1" description="Postal Address line 1 of the customer."/>
    <parameter name="postalAddress2" description="Postal Address line 2 of the customer."/>
    <parameter name="postalSuburb" description="Postal suburb of the customer."/>
    <parameter name="postalCity" description="Postal city of the customer."/>
    <parameter name="postalPostcode" description="Postal postcode of the customer."/>
    <parameter name="postalState" description="Postal state of the customer."/>
    <parameter name="postalCountryId" description="Postal country ID of the customer."/>
    <parameter name="customerGroupId" description="ID of the group to which the customer will be put."/>
    <parameter name="customerGroupName" description="Name of the group to which the customer will be put."/>
    <parameter name="twitter" description="Twitter ID of the customer."/>
    <parameter name="enableLoyalty" description="Indicate whether or not to enable loyality for the customer."/>
    <parameter name="dateOfBirth" description="Date of birth of the customr."/>
    <parameter name="sex" description="Gender of the customr."/>
    <parameter name="customField1" description="Custom Field 1 of the customer."/>
    <parameter name="customField2" description="Custom Field 2 of the customer."/>
    <parameter name="customField3" description="Custom Field 3 of the customer."/>
    <parameter name="customField4" description="Custom Field 4 of the customer."/>
    <parameter name="note" description="Note of the customer."/>
    <parameter name="customerId" description="ID of the customer to update."/>
    <sequence>
        <property name="uri.var.customerCode" expression="$func:customerCode"/>
        <property name="uri.var.companyName" expression="$func:companyName"/>
        <property name="uri.var.firstName" expression="$func:firstName"/>
        <property name="uri.var.lastName" expression="$func:lastName"/>
        <property name="uri.var.phone" expression="$func:phone"/>
        <property name="uri.var.mobile" expression="$func:mobile"/>
        <property name="uri.var.fax" expression="$func:fax"/>
        <property name="uri.var.email" expression="$func:email"/>
        <property name="uri.var.website" expression="$func:website"/>
        <property name="uri.var.physicalAddress1" expression="$func:physicalAddress1"/>
        <property name="uri.var.physicalAddress2" expression="$func:physicalAddress2"/>
        <property name="uri.var.physicalSuburb" expression="$func:physicalSuburb"/>
        <property name="uri.var.physicalCity" expression="$func:physicalCity"/>
        <property name="uri.var.physicalPostcode" expression="$func:physicalPostcode"/>
        <property name="uri.var.physicalState" expression="$func:physicalState"/>
        <property name="uri.var.physicalCountryId" expression="$func:physicalCountryId"/>
        <property name="uri.var.postalAddress1" expression="$func:postalAddress1"/>
        <property name="uri.var.postalAddress2" expression="$func:postalAddress2"/>
        <property name="uri.var.postalSuburb" expression="$func:postalSuburb"/>
        <property name="uri.var.postalCity" expression="$func:postalCity"/>
        <property name="uri.var.postalPostcode" expression="$func:postalPostcode"/>
        <property name="uri.var.postalState" expression="$func:postalState"/>
        <property name="uri.var.postalCountryId" expression="$func:postalCountryId"/>
        <property name="uri.var.customerGroupId" expression="$func:customerGroupId"/>
        <property name="uri.var.customerGroupName" expression="$func:customerGroupName"/>
        <property name="uri.var.twitter" expression="$func:twitter"/>
        <property name="uri.var.enableLoyalty" expression="$func:enableLoyalty"/>
        <property name="uri.var.dateOfBirth" expression="$func:dateOfBirth"/>
        <property name="uri.var.sex" expression="$func:sex"/>
        <property name="uri.var.customField1" expression="$func:customField1"/>
        <property name="uri.var.customField2" expression="$func:customField2"/>
        <property name="uri.var.customField3" expression="$func:customField3"/>
        <property name="uri.var.customField4" expression="$func:customField4"/>
        <property name="uri.var.note" expression="$func:note"/>
        <property name="uri.var.customerId" expression="$func:customerId"/>
        <payloadFactory media-type="json">
            <format>
                {"id": "$1"}
            </format>
            <args>
                <arg expression="get-property('uri.var.customerId')"/>
            </args>
        </payloadFactory>
        <script language="js">
            <![CDATA[
            var customerGroupId = mc.getProperty('uri.var.customerGroupId');
            var lastName = mc.getProperty('uri.var.lastName');
            var postalPostcode = mc.getProperty('uri.var.postalPostcode');
            var note = mc.getProperty('uri.var.note');
            var customField1 = mc.getProperty('uri.var.customField1');
            var customField2 = mc.getProperty('uri.var.customField2');
            var postalAddress2 = mc.getProperty('uri.var.postalAddress2');
            var postalSuburb = mc.getProperty('uri.var.postalSuburb');
            var customField3 = mc.getProperty('uri.var.customField3');
            var companyName = mc.getProperty('uri.var.companyName');
            var postalAddress1 = mc.getProperty('uri.var.postalAddress1');
            var customField4 = mc.getProperty('uri.var.customField4');
            var customerCode = mc.getProperty('uri.var.customerCode');
            var postalCity = mc.getProperty('uri.var.postalCity');
            var twitter = mc.getProperty('uri.var.twitter');
            var enableLoyalty = mc.getProperty('uri.var.enableLoyalty');
            var fax = mc.getProperty('uri.var.fax');
            var physicalSuburb = mc.getProperty('uri.var.physicalSuburb');
            var email = mc.getProperty('uri.var.email');
            var physicalPostcode = mc.getProperty('uri.var.physicalPostcode');
            var website = mc.getProperty('uri.var.website');
            var sex = mc.getProperty('uri.var.sex');
            var mobile = mc.getProperty('uri.var.mobile');
            var physicalCountryId = mc.getProperty('uri.var.physicalCountryId');
            var dateOfBirth = mc.getProperty('uri.var.dateOfBirth');
            var physicalAddress2 = mc.getProperty('uri.var.physicalAddress2');
            var physicalAddress1 = mc.getProperty('uri.var.physicalAddress1');
            var firstName = mc.getProperty('uri.var.firstName');
            var physicalCity = mc.getProperty('uri.var.physicalCity');
            var physicalState = mc.getProperty('uri.var.physicalState');
            var customerGroupName = mc.getProperty('uri.var.customerGroupName');
            var phone = mc.getProperty('uri.var.phone');
            var postalState = mc.getProperty('uri.var.postalState');
            var postalCountryId = mc.getProperty('uri.var.postalCountryId');
            var jsonPayload = mc.getPayloadJSON();
            if (customerCode != null && customerCode != ""){
               jsonPayload.customer_code = customerCode;
            }
            if (companyName != null && companyName != ""){
               jsonPayload.company_name = companyName;
            }
            if (firstName != null && firstName != ""){
               jsonPayload.first_name = firstName;
            }
            if (lastName != null && lastName != ""){
               jsonPayload.last_name = lastName;
            }
            if (phone != null && phone != ""){
               jsonPayload.phone = phone;
            }
            if (mobile != null && mobile != ""){
               jsonPayload.mobile = mobile;
            }
            if (fax != null && fax != ""){
               jsonPayload.fax = fax;
            }
            if (email != null && email != ""){
               jsonPayload.email = email;
            }
            if (website != null && website != ""){
               jsonPayload.website = website;
            }
            if (physicalAddress1 != null && physicalAddress1 != ""){
               jsonPayload.physical_address1 = physicalAddress1;
            }
            if (physicalAddress2 != null && physicalAddress2 != ""){
               jsonPayload.physical_address2 = physicalAddress2;
            }
            if (physicalSuburb != null && physicalSuburb != ""){
               jsonPayload.physical_suburb = physicalSuburb;
            }
            if (physicalCity != null && physicalCity != ""){
               jsonPayload.physical_city = physicalCity;
            }
            if (physicalPostcode != null && physicalPostcode != ""){
               jsonPayload.physical_postcode = physicalPostcode;
            }
            if (physicalState != null && physicalState != ""){
               jsonPayload.physical_state = physicalState;
            }
            if (physicalCountryId != null && physicalCountryId != ""){
               jsonPayload.physical_country_id = physicalCountryId;
            }
            if (postalAddress1 != null && postalAddress1 != ""){
               jsonPayload.postal_address1 = postalAddress1;
            }
            if (postalAddress2 != null && postalAddress2 != ""){
               jsonPayload.postal_address2 = postalAddress2;
            }
            if (postalSuburb != null && postalSuburb != ""){
               jsonPayload.postal_suburb = postalSuburb;
            }
            if (postalCity != null && postalCity != ""){
               jsonPayload.postal_city = postalCity;
            }
            if (postalPostcode != null && postalPostcode != ""){
               jsonPayload.postal_postcode = postalPostcode;
            }
            if (postalState != null && postalState != ""){
               jsonPayload.postal_state = postalState;
            }
            if (postalCountryId != null && postalCountryId != ""){
               jsonPayload.postal_country_id = postalCountryId;
            }
            if (customerGroupId != null && customerGroupId != ""){
               jsonPayload.customer_group_id = customerGroupId;
            }
            if (customerGroupName != null && customerGroupName != ""){
               jsonPayload.customer_group_name = customerGroupName;
            }
            if (twitter != null && twitter != ""){
               jsonPayload.twitter = twitter;
            }
            if (enableLoyalty != null && enableLoyalty != ""){
               jsonPayload.enable_loyalty = enableLoyalty;
            }
            if (dateOfBirth != null && dateOfBirth != ""){
               jsonPayload.date_of_birth = dateOfBirth;
            }
            if (sex != null && sex != ""){
               jsonPayload.sex = sex;
            }
            if (customField1 != null && customField1 != ""){
               jsonPayload.custom_field_1 = customField1;
            }
            if (customField2 != null && customField2 != ""){
               jsonPayload.custom_field_2 = customField2;
            }
            if (customField3 != null && customField3 != ""){
               jsonPayload.custom_field_3 = customField3;
            }
            if (customField4 != null && customField4 != ""){
               jsonPayload.custom_field_4 = customField4;
            }
            if (note != null && note != ""){
               jsonPayload.note = note;
            }
            mc.setPayloadJSON(jsonPayload);
         ]]>
        </script>
        <call>
            <endpoint>
                <http method="post" uri-template="{+uri.var.apiUrl}/customers"/>
            </endpoint>
        </call>
        <property name="uri.var.statusCode" expression="$axis2:HTTP_SC"/>
        <!-- If the call fails with 401 Unauthorized, then get a new access token by calling getAccessToken method. -->
        <filter xpath="get-property('uri.var.statusCode') = 401 and get-property('uri.var.refreshTokenNegotiated') = 'false'">
            <then>
                <vend.getAccessTokenFromRefreshToken/>
                <header name="Authorization" expression="fn:concat('Bearer ', get-property('uri.var.accessToken'))"
                        scope="transport"/>
                <vend.updateCustomer/>
            </then>
        </filter>
        <!-- Remove custom Headers from the API Response -->
        <header name="Vary" action="remove" scope="transport"/>
        <header name="Expires" action="remove" scope="transport"/>
        <header name="Pragma" action="remove" scope="transport"/>
        <header name="Cache-Control" action="remove" scope="transport"/>
        <header name="X-Vend-Request-Id" action="remove" scope="transport"/>
        <header name="Strict-Transport-Security" action="remove" scope="transport"/>
        <header name="Set-Cookie" action="remove" scope="transport"/>
        <header name="X-Hue" action="remove" scope="transport"/>
    </sequence>
</template>